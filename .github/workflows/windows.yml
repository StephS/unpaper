# SPDX-FileCopyrightText: 2020 Rodrigo Tavares <rodrigost23@users.noreply.github.com>
#
# SPDX-License-Identifier: GPL-2.0-only

name: Windows Build
on:
  push:
    branches: [master]
    tags: ["*"]

jobs:
  build:
    runs-on: windows-2019
    defaults:
      run:
        shell: bash --login -eo pipefail "{0}"
    env:
      MSYSTEM: MINGW64
      CHERE_INVOKING: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up shell
        shell: pwsh
        run: |
          echo ::add-path::C:\msys64\usr\bin\
          echo "::set-env name=LIBAV_PATH::$($ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath("${{ github.workspace }}/../libav-11.8"))"
          echo "::set-env name=REF_NAME::$("${{ github.event.ref }}".replace('refs/heads/', '').replace('refs/tags/', ''))"
          echo "::set-env name=SHORT_HASH::$('${{ github.sha }}'.SubString(0, 7))"

      - name: Cache pacman packages
        uses: actions/cache@v2.0.0
        with:
          key: pacman-cache
          path: C:\tools\msys64\var\cache\pacman\pkg

      - name: Install dependencies
        run: >
          pacman -S --noconfirm --needed zip base-devel mingw-w64-x86_64-toolchain diffutils
          pkg-config mingw-w64-x86_64-yasm mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL

      - name: Cache libav
        id: cache-libav
        uses: actions/cache@v2.0.0
        with:
          path: ${{ env.LIBAV_PATH }}
          key: libav-11.8
          restore-keys: |
            libav

      - name: Configure libav
        if: steps.cache-libav.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/..
        run: |
          wget https://libav.org/releases/libav-11.8.tar.xz
          tar -xvf libav-11.8.tar.xz || true
          mv libav-11.8 ${LIBAV_PATH}
          cd ${LIBAV_PATH}
          ./configure --target-os=mingw32 --prefix=${MINGW_PREFIX}

      - name: Build libav
        if: steps.cache-libav.outputs.cache-hit != 'true'
        working-directory: ${{ env.LIBAV_PATH }}
        run: |
          make -r

      - name: Install libav
        working-directory: ${{ env.LIBAV_PATH }}
        run: |
          make install

      - name: Build Unpaper
        run: |
          autoreconf -fi
          mkdir exe
          ./configure --prefix=${PWD}/exe
          make -r
          make install
          cp ${MINGW_PREFIX}/bin/LIBBZ2-1.DLL exe/bin
          cp ${MINGW_PREFIX}/bin/LIBWINPTHREAD-1.DLL exe/bin
          cp ${MINGW_PREFIX}/bin/ZLIB1.DLL exe/bin

      # COMMIT:
      - name: Upload a Build Artifact
        if: ${{ contains(github.event.ref, 'heads') }}
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: unpaper-${{ env.REF_NAME }}-${{ env.SHORT_HASH }}-windows-x86_84
          path: exe/bin/*

      # TAG:
      - name: Create zip for release
        if: ${{ contains(github.event.ref, 'tags') }}
        continue-on-error: true
        run: |
          ( cd exe/bin && zip -r ../../unpaper.zip . )

      - name: Create Release
        if: ${{ contains(github.event.ref, 'tags') }}
        id: create-release
        continue-on-error: true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: ${{ contains(github.event.ref, 'tags') }}
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: unpaper.zip
          asset_name: ${{ env.REF_NAME }}-windows-x86_64.zip
          asset_content_type: application/zip
